# default statusbar colors
set-option -g status-style bg=colour235,fg=colour136,default

# default window title colors
set-window-option -g window-status-style fg=colour244,bg=default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-style fg=colour166,bg=default
#set-window-option -g window-status-current-attr bright

# pane border
# set-option -g pane-border-style fg=colour235
# set-option -g pane-active-border-style fg=colour240
set -g pane-border-format "#{pane_index} #{pane_title}"
set -g pane-border-status bottom

# http://stackoverflow.com/questions/9747952/pane-title-in-tmux/37602055#37602055
# Show current command in pane border?
#tmux set -g pane-border-status top
#set -g pane-border-format "#{pane_index}: #{pane_current_command}"

# Fix long ESC processing delay in vim.
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 0

# active/inactive backgrounds
set -g window-active-style 'fg=default,bg=colour234'    # black
set -g window-style 'fg=colour247,bg=colour235'         # bit less black

# Highlight active window in status bar
setw -g window-status-current-style fg=white,bg=red

# message text
set-option -g message-style bg=colour235,fg=colour166

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange
# clock
set-window-option -g clock-mode-colour green #green
set-window-option -g clock-mode-colour colour64 #green

set -g status-interval 1
set -g status-justify centre # center align window list
set -g status-left-length 20
set -g status-right-length 140
set -g status-left '#[fg=green]#H #[fg=black]â€¢ #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
set -g status-right '#[fg=green,bg=default,bright]#(tmux-mem-cpu-load) #[fg=red,dim,bg=default]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'

set-option -g status-style bright

set-window-option -g window-status-style fg=brightblue

# ------------- #
# Define Colors #
# ------------- #
GRAY="#808080"
BLUE="#569CD6"
DARK_BLUE="223E55"
RED="#EE4646"
YELLOW="#CCCC99"
BACKGROUND="#000000"
FOREGROUND="#CCCCCC"




# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix


# ` is an interesting key for a prefix
set-option -g prefix `
# set-option -g prefix C-a

# Pane sync control
# Added shift (X vs x) as it happens without the prefix key
bind-key -n C-X setw synchronize-panes on \;  set-window-option status-bg red \; display-message "pane sync on"
bind-key -n M-X setw synchronize-panes off \;  set-window-option status-bg default \; display-message "pane sync off"

##
## TEST - is this causing the HISTFILE mismatch??
##
# 0 is too far from ` ;)https://github.com/tmux-plugins/vim-tmux
# set -g base-index 1

# https://github.com/tmuxinator/tmuxinator
# If you use a base-index other than the default, please be sure to also set the pane-base-index
set-window-option -g pane-base-index 1

unbind-key C-b
bind-key C-a last-window
bind-key ` last-window
# bind-key a send-prefix


# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# No - disable for tmux -CC iterm2 support.
#setw -g aggressive-resize on

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Activity monitoring
# setw -g monitor-activity on
# set -g visual-activity on

# Vi copypaste mode
set-window-option -g mode-keys vi
# Clipboard copy/select
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# Arrow selection
# Meta = pane
# Shift = window
# Meta-Shift = session

# https://github.com/henrik/dotfiles/commit/24ddbd90f75a2383400ef2c912b9ab8a5d5e9fc8
# Smart pane switching with awareness of vim splits.
bind -n M-Up run-shell 'tmux-vim-select-pane -U'
bind -n M-Down run-shell 'tmux-vim-select-pane -D'
bind -n M-Left run-shell 'tmux-vim-select-pane -L'
bind -n M-Right run-shell 'tmux-vim-select-pane -R'

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Swap windows left/right
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Shift-Meta-Left: Switch to previous session
bind -n M-S-Left switch-client -p \; refresh-client -S \; display-message "#{session_name}"

# Shift-Meta-Right: Switch to next session
bind -n M-S-Right switch-client -n \; refresh-client -S \; display-message "#{session_name}"

# set to main-horizontal, 60% height for main pane
bind m set-window-option main-pane-height 60\; select-layout main-horizontal

# couple of keys to fix the "... is dead" from the above remain.
bind C-r respawn-pane
bind R respawn-window

# we might need ` at some point, allow switching
# we can also send the prefix char with `-a
bind-key F11 set-option -g prefix C-a
bind-key F12 set-option -g prefix `

# pass through xterm keys
set -g xterm-keys on

###########################################################################
# Mouse mode
# Toggle mouse on
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# Start with it on
set -g mouse on

# don't rename windows automatically
set-option -g allow-rename off

# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# set-option -g default-command "tmux.sh -l zsh"
set -g default-command "reattach-to-user-namespace -l ${SHELL}"
# set -g default-command "~/bin/new.sh"

set -g default-terminal "screen-256color"

set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

bind-key C command-prompt -p "Name of new window: " "new-window -n '%%'"

# 
# What to open on startup
#

source-file ~/.tmux/a-roche.tmux
source-file ~/.tmux/p-nghc.tmux
# source-file ~/.tmux/p-sgPete


#
# tmux plugin manager -
#

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

# https://github.com/tmux-plugins/tmux-sensible
set -g @plugin 'tmux-plugins/tmux-sensible'

# https://github.com/tmux-plugins/tmux-pain-control
set -g @plugin 'tmux-plugins/tmux-pain-control'
set-option -g @pane_resize "5"

# Navigation

# prefix + h and prefix + C-h   # select pane on the left
# prefix + j and prefix + C-j   # select pane below the current one
# prefix + k and prefix + C-k   # select pane above
# prefix + l and prefix + C-l   # select pane on the right

# Resizing panes

# prefix + shift + h  # resize current pane 5 cells to the left
# prefix + shift + j  # resize 5 cells in the up direction
# prefix + shift + k  # resize 5 cells in the down direction
# prefix + shift + l  # resize 5 cells to the right

# Splitting panes

# prefix + |        # split current pane horizontally
# prefix + -        # split current pane vertically

# Swapping windows

# prefix + <        # moves current window one position to the left
# prefix + >        # moves current window one position to the right


# https://github.com/tmux-plugins/tmux-sessionist
set -g @plugin 'tmux-plugins/tmux-sessionist'
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.


# Disable, problems with 'n' key and 'Not in a mode' messages

# https://github.com/tmux-plugins/tmux-copycat
set -g @plugin 'tmux-plugins/tmux-copycat'
# Predefined searches
#
#    prefix + ctrl-f - simple file search
#    prefix + ctrl-g - jumping over git status files (best used after git status command or files with no "/" in the name)
#    prefix + alt-h - jumping over SHA-1 hashes (best used after git log command)
#    prefix + ctrl-u - url search (http, ftp and git urls)
#    prefix + ctrl-d - number search (mnemonic d, as digit)
#    prefix + alt-i - ip address search
#
# These start "copycat mode" and jump to first match.
# "Copycat mode" bindings
#
# These are enabled when you search with copycat:
#
#    n - jumps to the next match
#    N - jumps to the previous match
#
# To copy a highlighted match:
#
#    Enter - if you're using Tmux vi mode
#    ctrl-w or alt-w - if you're using Tmux emacs mode



# https://github.com/tmux-plugins/tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'
#   y - copy selection to system clipboard
#   Y (shift-y) - "put" selection - equivalent to copying a selection, and pasting it to the command line

# https://github.com/tmux-plugins/tmux-logging
set -g @plugin 'tmux-plugins/tmux-logging'
#  log     - Key binding: prefix + shift + p
#  capture - Key binding: prefix + alt + p (See: https://github.com/tmux-plugins/tmux-logging/issues/8 to fix)

# https://github.com/tmux-plugins/tmux-logging/pull/20
set -g @logging-path "$HOME/log/tmux/%Y-%m-%d"
set -g @logging-filename "#{session_name}-#{window_name}-#{pane_index}.log"


# Bah, interesting but not useful, save as a sample for later?
# https://github.com/tmux-plugins/tmux-sidebar
#set -g @plugin 'tmux-plugins/tmux-sidebar'
#run-shell ~/.tmux/plugins/tmux-sidebar/sidebar.tmux

# soften status bar color from harsh green to light gray
#set -g status-style bg='#666666',fg='#aaaaaa'

## https://github.com/NHDaly/tmux-better-mouse-mode
#set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# or ?
# https://github.com/vercel/hyper/issues/3338
bind-key -T copy-mode-vi WheelUpPane send -N1 -X scroll-up
bind-key -T copy-mode-vi WheelDownPane send -N1 -X scroll-down

#bind-key C-l send-keys 'C-l'
# https://github.com/christoomey/vim-tmux-navigator
set -g @plugin 'christoomey/vim-tmux-navigator'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


# vim:set ft=tmux:
